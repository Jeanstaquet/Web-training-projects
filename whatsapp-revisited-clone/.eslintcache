[{"C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\index.js":"1","C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\App.js":"2","C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\reportWebVitals.js":"3","C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\containers\\Auth\\Auth.js":"4","C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\containers\\Chat\\Chat.js":"5","C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\containers\\Conversations\\Conversations.js":"6","C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\components\\Conversation\\Conversation.js":"7","C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\components\\Message\\Message.js":"8","C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\store\\reducer\\auth.js":"9","C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\store\\action\\index.js":"10","C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\store\\action\\auth.js":"11","C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\firebase.js":"12","C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\components\\UI\\Spinner\\Spinner.js":"13","C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\components\\UI\\Modal\\Modal.js":"14","C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\components\\UI\\Backdrop\\Backdrop.js":"15"},{"size":984,"mtime":1607904285347,"results":"16","hashOfConfig":"17"},{"size":856,"mtime":1608322970594,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"17"},{"size":4496,"mtime":1608507350492,"results":"20","hashOfConfig":"17"},{"size":4102,"mtime":1608508462267,"results":"21","hashOfConfig":"17"},{"size":4077,"mtime":1608508413457,"results":"22","hashOfConfig":"17"},{"size":1828,"mtime":1608391192812,"results":"23","hashOfConfig":"17"},{"size":326,"mtime":1607871069626,"results":"24","hashOfConfig":"17"},{"size":2209,"mtime":1609186491333,"results":"25","hashOfConfig":"17"},{"size":124,"mtime":1608324638696,"results":"26","hashOfConfig":"17"},{"size":3626,"mtime":1609186520870,"results":"27","hashOfConfig":"17"},{"size":771,"mtime":1608032640432,"results":"28","hashOfConfig":"17"},{"size":219,"mtime":1608030482749,"results":"29","hashOfConfig":"17"},{"size":1441,"mtime":1608395824252,"results":"30","hashOfConfig":"17"},{"size":288,"mtime":1608256393575,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"cln990",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\index.js",[],["67","68"],"C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\App.js",[],"C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\reportWebVitals.js",[],"C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\containers\\Auth\\Auth.js",["69","70"],"import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport \"./Auth.scss\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport * as actions from \"../../store/action/index\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst Auth = (props) => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [pseudo, setPseudo] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [method, setMethod] = useState(\"Register\");\r\n    const [errorMessage, setErrorMessage] = useState(false)\r\n    const [data, setData] = useState([])\r\n\r\n    const authCreateHandler = (e) => {\r\n        e.preventDefault();\r\n        //props.registerMethod();\r\n        if(pseudo.length < 1 || email.length < 1 || password < 1) {\r\n            setErrorMessage(true)\r\n            setTimeout(() => {\r\n                setErrorMessage(false)\r\n            }, 5000)\r\n        } else {\r\n            let meth = true;\r\n            if(method===\"Login\") {\r\n                meth = false\r\n            }\r\n            \r\n            props.auth(email, password, pseudo, meth);\r\n        }\r\n    }\r\n\r\n\r\n    const switchMethod = () => {\r\n        if(method === \"Register\") {\r\n            //props.loginMethod();\r\n            setMethod(\"Login\");\r\n        } else if (method === \"Login\") {\r\n            setMethod(\"Register\");\r\n            //props.registerMethod();\r\n        }\r\n    }\r\n\r\n\r\n    let redirect = true;\r\n    if(props.isAuth) {\r\n        redirect = <Redirect to=\"/app\"/>\r\n    }\r\n    return (\r\n        <div className=\"auth__background\">\r\n            {redirect}\r\n            <div className=\"auth__container\">\r\n                <img src=\"https://upload.wikimedia.org/wikipedia/commons/c/cb/Whatsapp_logo.svg\" alt=\"whatsapp logo\"/>\r\n                <div className=\"authW__container\">\r\n                    <h2><span onClick={switchMethod} className={method===\"Register\" ? \"auth__loginButton\": null}>Login</span> or <span onClick={switchMethod} className={!(method===\"Register\") ? \"auth__registerButton\": null}>create a new account</span></h2>\r\n                    <button onClick={() => props.signWithGoogle()}>{method===\"Register\" ? \"Create an account with Google\" : \"Login with Google\"}</button>\r\n                </div>\r\n                <p>OR</p>\r\n                \r\n                <form className=\"authNormal__container\">\r\n                <h4>{method===\"Register\" ? \"Create an account with your informations\" : \"Enter your information\"}</h4>\r\n                    {errorMessage ? <p className=\"error__message\">You should include a pseudo, email and password</p> : null}\r\n                    <TextField onChange={(e) => setEmail(e.target.value)}\r\n                        id=\"filled-password-input\"\r\n                        label=\"Email\"\r\n                        type=\"email\"\r\n                        value={email}\r\n                    />\r\n                    {method===\"Register\" ? <TextField onChange={(e) => setPseudo(e.target.value)}\r\n                        id=\"filled-password-input\"\r\n                        label=\"Pseudo\"\r\n                        type=\"name\"\r\n                        required\r\n                        value={pseudo}\r\n                    />: null}\r\n                    {method===\"Register\" ? <span className=\"auth__available\">Check if it is availble : <CloseIcon className=\"notOnScreen\"/><DoneIcon/></span>: null}\r\n                    <TextField onChange={(e) => setPassword(e.target.value)}\r\n                        id=\"filled-password-input\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        value={password}\r\n                    />\r\n                    <button type=\"submit\" onClick={authCreateHandler}>{method===\"Register\" ? \"Create an account\" : \"Login\"}</button>\r\n                </form>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuth: state.token && true,\r\n        userId: state.userId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        auth: (e, p, pseudo, registred) => dispatch(actions.authEP(e, p, pseudo, registred)),\r\n        // loginMethod: () => dispatch(actions.loginMethod()),\r\n        // registerMethod: () => dispatch(actions.registerMethod())\r\n        signWithGoogle: () => dispatch(actions.signWithGoogle())\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);","C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\containers\\Chat\\Chat.js",["71"],"import React, { useEffect, useState } from 'react';\r\nimport \"./Chat.scss\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport { Avatar } from '@material-ui/core';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport Message from \"../../components/Message/Message\";\r\nimport db from \"../../firebase\";\r\nimport firebase from \"firebase\"\r\nimport {connect} from \"react-redux\"\r\nconst Chat = (props) => {\r\n\r\n    const [mess, setMessage] = useState(\"\");\r\n    const [messageCanal, setMessageCanal] = useState([])\r\n\r\n    let iconSend = mess.length < 1 ? <MicIcon className=\"chat__sendMessageMic\"/> : <SendIcon onClick={(e) => sendMessage(e, mess)} className=\"chat__sendMessageMic\"/>\r\n\r\n    useEffect(() => {\r\n        if(props.userId && props.roomName) {\r\n            db\r\n            .collection(\"Users\")\r\n            .doc(props.userId)\r\n            .collection(\"conversations\")\r\n            .doc(props.roomName)\r\n            .collection(\"messages\")\r\n            .orderBy(\"timestamp\", \"asc\")\r\n            .onSnapshot(snapshot => (\r\n                setMessageCanal(snapshot.docs.map(doc => (\r\n                    {\r\n                        data: doc.data()\r\n                    }\r\n                )))\r\n            ))\r\n        }\r\n\r\n\r\n        return () => {\r\n\r\n        }\r\n    }, [props.roomName])\r\n\r\n\r\n    const sendMessage = (event, message) => {\r\n        if(event) {\r\n            event.preventDefault()\r\n        }\r\n\r\n        db\r\n            .collection(\"Users\")\r\n            .doc(props.userId)\r\n            .collection(\"conversations\")\r\n            .doc(props.roomName)\r\n            .collection(\"messages\")\r\n            .add({\r\n                message: mess,\r\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                sender: props.pseudo\r\n            })\r\n\r\n            setMessage(\"\")\r\n    }\r\n    let messageBody = document.querySelector('.chat__content');\r\n    if(messageBody) {\r\n        messageBody.scrollTop = messageBody.scrollHeight - messageBody.clientHeight;\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"chat__container\">\r\n            <div className=\"chat__banner\">\r\n                <div className=\"chat__bannerInfo\">\r\n                    <Avatar className=\"chat__bannerAvatar\"/>\r\n                    <div className=\"chat__info\">\r\n                        <p>{props.contact}</p>\r\n                        <p>Person</p>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"chat__bannerIcon\">\r\n                    <SearchIcon/>\r\n                    <MoreHorizIcon/>\r\n                </div>\r\n            </div>\r\n            <div className=\"chat__content\">\r\n                {/* {messageCanal.map(mess => {\r\n                    return <Message message={mess.message} timestamp={mess.timestamp} reviever={true}/>\r\n                })} */}\r\n                {messageCanal.map((room, index) => (\r\n                    <Message key={index} message={room.data.message}/>\r\n                ))}\r\n            </div>\r\n            <div className=\"chat__sendMessage\">\r\n                <div className=\"chat__sendMessageEmoji\">\r\n                    <InsertEmoticonIcon/>\r\n                    <AttachFileIcon/>\r\n                </div>\r\n                <form className=\"chat__sendMessageContent\">\r\n                    <input disabled={props.roomName===null} type=\"text\" onChange={(e) => setMessage(e.target.value)} value={mess}/>\r\n                    <button type=\"submit\" onClick={(event) => sendMessage(event, mess)}></button>\r\n                </form>\r\n                {iconSend}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userId: state.userId,\r\n        roomName: state.roomName,\r\n        email: state.email,\r\n        pseudo: state.pseudo,\r\n        contact: state.contact\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, null)(Chat);","C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\containers\\Conversations\\Conversations.js",["72"],"import React, {useEffect, useState} from 'react';\r\nimport \"./Conversations.scss\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport { Avatar } from '@material-ui/core';\r\nimport Conversation from \"../../components/Conversation/Conversation\";\r\nimport {connect} from \"react-redux\";\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Modal from \"../../components/UI/Modal/Modal\";\r\nimport db from \"../../firebase\";\r\nimport * as actions from \"../../store/action/index\"\r\nconst Conversations = (props) => {\r\n    const [modal, setModal] = useState(false); \r\n    const [conversationName, setConversationName] = useState(\"\");\r\n    const [fetchedConversations, setFetchecConversations] = useState([])\r\n    const [contact, setContact] = useState(\"\");\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n    const toggleModal = () => {\r\n        setModal(true)\r\n    }\r\n\r\n    const toggleModalClose = (e) => {\r\n        e.preventDefault();\r\n        setModal(false)\r\n    }\r\n\r\n    const changeModalHandler = (e) => {\r\n        setConversationName(e.target.value)\r\n    }\r\n\r\n\r\n    const changeContactHandler = (e) => {\r\n        setContact(e.target.value)\r\n    }\r\n\r\n    const addConversationHandler = (e) => {\r\n        e.preventDefault()\r\n        if(contact.length === 0 || conversationName.length === 0) {\r\n            setErrorMessage(\"You have to add an chat name and/or a valid pseudo name\")\r\n            setTimeout(() => {\r\n                setErrorMessage(\"\")\r\n            }, 5000)\r\n        } else {\r\n\r\n            db.collection(\"Users\").doc(props.userId).collection(\"conversations\").doc(conversationName).set({\r\n                name: conversationName,\r\n                contact: contact\r\n            })\r\n            setConversationName(\"\");\r\n            setModal(false)\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(props.userId) {}\r\n        const unsubcribe = db.collection(\"Users\")\r\n                .doc(props.userId)\r\n                .collection(\"conversations\")\r\n                .onSnapshot(snapshot => setFetchecConversations(snapshot.docs.map((doc) => doc.data())))\r\n    \r\n        return () => {\r\n            unsubcribe();\r\n        }\r\n    \r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className=\"converstations__container\">\r\n            <Modal show={modal} \r\n                   click={toggleModalClose} \r\n                   change={changeModalHandler}\r\n                   changeContact={changeContactHandler} \r\n                   ok={addConversationHandler}\r\n                   errorMessage={errorMessage}/>\r\n            <div className=\"conv__account\">\r\n                <Avatar src={props.photo}/>\r\n                <button>FEATURES</button>\r\n                <div className=\"conv__accountIcons\">\r\n                    <Tooltip title=\"Add a new feature\" arrow>\r\n                        <AddIcon/>\r\n                    </Tooltip>\r\n \r\n                    <MoreHorizIcon/>\r\n                </div>\r\n            </div>\r\n            <div className=\"conv__searchBar\">\r\n                <input type=\"text\"/>\r\n                <SearchIcon className=\"conv__glass\"/>\r\n            </div>\r\n            <div className=\"conv__list\">\r\n                <Conversation addNewConv={true} click={toggleModal}/>\r\n                {fetchedConversations.map((conv, i) => {\r\n                    return <Conversation key={i} \r\n                                         name={conv.name} \r\n                                         roomname={conv.name}\r\n                                         dispatchRoomName={() => props.roomNameHandler(conv.name, conv.contact)}/>\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        photo: state.photo,\r\n        userId: state.userId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        roomNameHandler: (r, c) => dispatch(actions.roomNameHandler(r, c))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Conversations);","C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\components\\Conversation\\Conversation.js",[],"C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\components\\Message\\Message.js",[],"C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\store\\reducer\\auth.js",[],"C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\store\\action\\index.js",[],"C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\store\\action\\auth.js",[],"C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\firebase.js",[],"C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\components\\UI\\Spinner\\Spinner.js",[],"C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\components\\UI\\Modal\\Modal.js",["73"],"import React from 'react';\r\nimport \"./Modal.scss\";\r\nimport Backdrop from \"../Backdrop/Backdrop\";\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nconst Modal = (props) => {\r\n    return (\r\n        <React.Fragment>\r\n            <Backdrop show={props.show} click={props.click}/>\r\n            <CSSTransition in={props.show} timeout={300} classNames={\"modal-transition\"} unmountOnExit >\r\n            <div className=\"modal__container\" >\r\n\r\n                <form>\r\n                    <h4>{props.errorMessage}</h4>\r\n                    <label>Choose a new conversation name</label>\r\n                    <input className={props.errorMessage ? \"errorInput\" : null} placeholder=\"Name\" onChange={(e) => props.change(e)}/>\r\n                    <label>Add the pseudo of your the receiver:</label>\r\n                    <div className=\"modal__addPerson\">\r\n                        <input className={props.errorMessage ? \"errorInput\" : null} type=\"text\" placeholder=\"Pseudo\" onChange={(e) => props.changeContact(e)}/>\r\n                    </div>\r\n                    <div className=\"modal__button\">\r\n                        <button onClick={props.ok}>OK</button>\r\n                        <button onClick={props.click}>Cancel</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            </CSSTransition>\r\n        </React.Fragment>\r\n\r\n    );\r\n};\r\n\r\nexport default Modal;","C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\components\\UI\\Backdrop\\Backdrop.js",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":16,"column":12,"nodeType":"80","messageId":"81","endLine":16,"endColumn":16},{"ruleId":"78","severity":1,"message":"82","line":16,"column":18,"nodeType":"80","messageId":"81","endLine":16,"endColumn":25},{"ruleId":"83","severity":1,"message":"84","line":43,"column":8,"nodeType":"85","endLine":43,"endColumn":24,"suggestions":"86"},{"ruleId":"83","severity":1,"message":"84","line":68,"column":8,"nodeType":"85","endLine":68,"endColumn":10,"suggestions":"87"},{"ruleId":"78","severity":1,"message":"88","line":5,"column":8,"nodeType":"80","messageId":"81","endLine":5,"endColumn":15},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","'setData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.userId'. Either include it or remove the dependency array.","ArrayExpression",["91"],["92"],"'AddIcon' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"93","fix":"94"},{"desc":"95","fix":"96"},"Update the dependencies array to be: [props.roomName, props.userId]",{"range":"97","text":"98"},"Update the dependencies array to be: [props.userId]",{"range":"99","text":"100"},[1513,1529],"[props.roomName, props.userId]",[2280,2282],"[props.userId]"]