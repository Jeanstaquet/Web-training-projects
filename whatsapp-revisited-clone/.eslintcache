[{"C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\index.js":"1","C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\App.js":"2","C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\reportWebVitals.js":"3","C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\containers\\Auth\\Auth.js":"4","C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\containers\\Chat\\Chat.js":"5","C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\containers\\Conversations\\Conversations.js":"6","C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\components\\Conversation\\Conversation.js":"7","C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\components\\Message\\Message.js":"8","C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\store\\reducer\\auth.js":"9","C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\store\\action\\index.js":"10","C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\store\\action\\auth.js":"11","C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\firebase.js":"12","C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\components\\UI\\Spinner\\Spinner.js":"13","C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\components\\UI\\Modal\\Modal.js":"14","C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\components\\UI\\Backdrop\\Backdrop.js":"15","C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\containers\\FeatureMenu\\FeatureMenu.js":"16"},{"size":984,"mtime":1607904285347,"results":"17","hashOfConfig":"18"},{"size":855,"mtime":1609516635130,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":4758,"mtime":1609283452943,"results":"21","hashOfConfig":"18"},{"size":4853,"mtime":1609515257294,"results":"22","hashOfConfig":"18"},{"size":5441,"mtime":1609540874067,"results":"23","hashOfConfig":"18"},{"size":1828,"mtime":1608391192812,"results":"24","hashOfConfig":"18"},{"size":326,"mtime":1609359066946,"results":"25","hashOfConfig":"18"},{"size":2587,"mtime":1609349769479,"results":"26","hashOfConfig":"18"},{"size":162,"mtime":1609196485206,"results":"27","hashOfConfig":"18"},{"size":4353,"mtime":1609358507210,"results":"28","hashOfConfig":"18"},{"size":771,"mtime":1608032640432,"results":"29","hashOfConfig":"18"},{"size":219,"mtime":1608030482749,"results":"30","hashOfConfig":"18"},{"size":2033,"mtime":1609540820942,"results":"31","hashOfConfig":"18"},{"size":288,"mtime":1608256393575,"results":"32","hashOfConfig":"18"},{"size":1865,"mtime":1609541638239,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"cln990",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\index.js",[],["69","70"],"C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\App.js",[],"C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\reportWebVitals.js",[],"C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\containers\\Auth\\Auth.js",[],"C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\containers\\Chat\\Chat.js",["71","72"],"import React, { useEffect, useState } from 'react';\r\nimport \"./Chat.scss\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport { Avatar } from '@material-ui/core';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport Message from \"../../components/Message/Message\";\r\nimport db from \"../../firebase\";\r\nimport firebase from \"firebase\"\r\nimport {connect} from \"react-redux\"\r\nconst Chat = (props) => {\r\n\r\n    const [mess, setMessage] = useState(\"\");\r\n    const [messageCanal, setMessageCanal] = useState([])\r\n\r\n    let iconSend = mess.length < 1 ? <MicIcon className=\"chat__sendMessageMic\"/> : <SendIcon onClick={(e) => sendMessage(e, mess)} className=\"chat__sendMessageMic\"/>\r\n\r\n    useEffect(() => {\r\n        if(props.userId && props.roomName) {\r\n            db\r\n            .collection(\"Users\")\r\n            .doc(props.userId)\r\n            .collection(\"conversations\")\r\n            .doc(props.roomName)\r\n            .collection(\"messages\")\r\n            .orderBy(\"timestamp\", \"asc\")\r\n            .onSnapshot(snapshot => (\r\n                setMessageCanal(snapshot.docs.map(doc => (\r\n                    {\r\n                        data: doc.data()\r\n                    }\r\n                )))\r\n            ))\r\n        }\r\n    }, [props.roomName]);\r\n    useEffect(() => console.log(messageCanal))\r\n    const sendMessage = (event) => {\r\n        if(event) {\r\n            event.preventDefault()\r\n        }\r\n        //Query for the current user\r\n        db\r\n            .collection(\"Users\")\r\n            .doc(props.userId)\r\n            .collection(\"conversations\")\r\n            .doc(props.roomName)\r\n            .collection(\"messages\")\r\n            .add({\r\n                message: mess,\r\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                sender: props.pseudo.pseudo\r\n            })\r\n        //Query for the contact     \r\n        db\r\n        .collection(\"Users\")\r\n        .doc(props.contactData.userId)\r\n        .collection(\"conversations\")\r\n        .doc(props.roomName)\r\n        .collection(\"messages\")\r\n        .add({\r\n            message: mess,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            sender: props.pseudo.pseudo\r\n        })\r\n\r\n            setMessage(\"\");\r\n    }\r\n    let messageBody = document.querySelector('.chat__content');\r\n    if(messageBody) {\r\n        messageBody.scrollTop = messageBody.scrollHeight - messageBody.clientHeight;\r\n    }\r\n    return (\r\n        <div className=\"chat__container\">\r\n            <div className=\"chat__banner\">\r\n                <div className=\"chat__bannerInfo\">\r\n                    <Avatar className=\"chat__bannerAvatar\">{props.contact ? props.contact[0] : null}</Avatar>\r\n                    <div className=\"chat__info\">\r\n                        <p>{props.contact}</p>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"chat__bannerIcon\">\r\n                    <SearchIcon/>\r\n                    <MoreHorizIcon/>\r\n                </div>\r\n            </div>\r\n            <div className=\"chat__content\">\r\n                {/* {messageCanal.map(mess => {\r\n                    return <Message message={mess.message} timestamp={mess.timestamp} reviever={true}/>\r\n                })} */}\r\n                {messageCanal.map((room, index) => (\r\n                    <Message key={index} \r\n                             message={room.data.message} \r\n                             reciever={room.data.sender == props.pseudo.pseudo ? false : true}\r\n                             timestamp={room.data.timestamp ? (new Date(room.data.timestamp.seconds * 1000)).toLocaleDateString('en-UK') : null} />\r\n                ))}\r\n            </div>\r\n            <div className=\"chat__sendMessage\">\r\n                <div className=\"chat__sendMessageEmoji\">\r\n                    <InsertEmoticonIcon/>\r\n                    <AttachFileIcon/>\r\n                </div>\r\n                <form className=\"chat__sendMessageContent\">\r\n                    <input disabled={props.roomName===null} type=\"text\" onChange={(e) => setMessage(e.target.value)} value={mess}/>\r\n                    <button type=\"submit\" onClick={(event) => sendMessage(event, mess)}></button>\r\n                </form>\r\n                {iconSend}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userId: state.userId,\r\n        roomName: state.roomName,\r\n        email: state.email,\r\n        pseudo: state.pseudo,\r\n        contact: state.contact,\r\n        contactData: state.contactDetails\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, null)(Chat);","C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\containers\\Conversations\\Conversations.js",["73","74"],"C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\components\\Conversation\\Conversation.js",[],"C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\components\\Message\\Message.js",[],"C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\store\\reducer\\auth.js",[],"C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\store\\action\\index.js",[],"C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\store\\action\\auth.js",["75"],"import axios from \"axios\";\r\nimport db, {auth, provider} from \"../../firebase\";\r\nimport firebase from \"firebase\";\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: \"AUTH_START\"\r\n    }\r\n}\r\n\r\nexport const authSuccess = (token, userId, expirationTime) => {\r\n    return {\r\n        type: \"AUTH_SUCCESS\",\r\n        token: token,\r\n        userId: userId,\r\n        expirationTime: expirationTime\r\n    }\r\n}\r\n\r\nexport const authFail = (message) => {\r\n    return {\r\n        type: \"AUTH_FAIL\",\r\n        message: message\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    return {\r\n        type: \"LOGOUT\"\r\n    }\r\n}\r\n\r\nexport const authReset = () => {\r\n    return {\r\n        type: \"AUTH_RESET\"\r\n    }\r\n}\r\n\r\nexport const pseudoHandler = (pseudo) => {\r\n    return {\r\n        type: \"PSEUDO_HANDLER\",\r\n        pseudo: pseudo\r\n    }\r\n}\r\n\r\nexport const authEP = (email, password, pseudo, isRegister) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        const data = {\r\n            email: email,\r\n            password: password, \r\n            pseudo: pseudo\r\n        }\r\n        let url = \"\"\r\n        if(isRegister) {\r\n            url = \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCmXjwaVbRraK5e8ZLQu-P5d-NuO85ramQ\";\r\n\r\n        }\r\n        \r\n        if(!isRegister) {\r\n            url = \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCmXjwaVbRraK5e8ZLQu-P5d-NuO85ramQ\"\r\n        }\r\n        let pseudoFetched = null\r\n        axios.post(url, data)\r\n            .then(res => {\r\n                if(isRegister) {\r\n                    db.collection(\"Users\").doc(res.data.localId).set({\r\n                        userId: res.data.localId,\r\n                        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                        email: email,\r\n                        pseudo: pseudo,\r\n                        password: password\r\n                    });\r\n                } else {\r\n\r\n                }\r\n                db.collection(\"Users\").where(\"userId\", \"==\", res.data.localId)\r\n                .get()\r\n                .then((querySnapShot) => {\r\n                    querySnapShot.forEach(function(doc) {\r\n                        dispatch(pseudoHandler(doc.data()))\r\n                    })\r\n                })\r\n                dispatch(authSuccess(res.data.idToken, res.data.localId, 60))\r\n            })\r\n            .catch(error => {\r\n                dispatch(authFail(error.response.data.error.message))\r\n                setTimeout(() => {\r\n                    dispatch(authReset())\r\n                }, 5000);\r\n        })\r\n    }\r\n}\r\n\r\n// export const loginMethod = () => {\r\n//     return {\r\n//         type: \"LOGIN_METHOD\"\r\n//     }\r\n// }\r\n\r\n// export const registerMethod = () => {\r\n//     return {\r\n//         type: \"REGISTER_METHOD\"\r\n//     }\r\n// }\r\n\r\nexport const googleAuth = (token, userId, photo, isNew, email) => {\r\n    return {\r\n        type: \"SIGN_WITH_GOOGLE\",\r\n        token: token,\r\n        userId: userId,\r\n        photo: photo,\r\n        isNew: isNew,\r\n        email: email\r\n    }\r\n}\r\n\r\nexport const signWithGoogle = () => {\r\n    return dispatch => {\r\n        auth\r\n        .signInWithPopup(provider)\r\n        .then(result => {\r\n            dispatch(googleAuth(result.credential.idToken, \r\n                                result.additionalUserInfo.profile.id, \r\n                                result.additionalUserInfo.profile.picture, \r\n                                result.additionalUserInfo.isNewUser,\r\n                                result.additionalUserInfo.profile.email));\r\n            if(result.additionalUserInfo.isNew) {\r\n                db.collection(\"Users\").add({\r\n                    userId: result.additionalUserInfo.profile.id,\r\n                    timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                    email: result.additionalUserInfo.profile.email,\r\n                    password: \"googleConnection\"\r\n                });\r\n            }\r\n            \r\n        })\r\n    }\r\n}\r\n\r\nexport const roomNameHandler = (roomName, contact, details) => {\r\n    return {\r\n        type: \"ROOM_NAME_HANDLER\",\r\n        roomName: roomName,\r\n        contact: contact,\r\n        details: details\r\n    }\r\n}\r\n\r\nexport const contactDetails = (details) => {\r\n    return {\r\n        type: \"CONTACT_DATA\",\r\n        details: details\r\n    }\r\n}","C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\firebase.js",[],"C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\components\\UI\\Spinner\\Spinner.js",[],"C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\components\\UI\\Modal\\Modal.js",["76"],"C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\components\\UI\\Backdrop\\Backdrop.js",[],"C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\containers\\FeatureMenu\\FeatureMenu.js",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":38,"column":8,"nodeType":"83","endLine":38,"endColumn":24,"suggestions":"84"},{"ruleId":"85","severity":1,"message":"86","line":97,"column":57,"nodeType":"87","messageId":"88","endLine":97,"endColumn":59},{"ruleId":"89","severity":1,"message":"90","line":1,"column":27,"nodeType":"91","messageId":"92","endLine":1,"endColumn":33},{"ruleId":"81","severity":1,"message":"82","line":91,"column":8,"nodeType":"83","endLine":91,"endColumn":10,"suggestions":"93"},{"ruleId":"89","severity":1,"message":"94","line":63,"column":13,"nodeType":"91","messageId":"92","endLine":63,"endColumn":26},{"ruleId":"89","severity":1,"message":"95","line":5,"column":8,"nodeType":"91","messageId":"92","endLine":5,"endColumn":15},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.userId'. Either include it or remove the dependency array.","ArrayExpression",["98"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar",["99"],"'pseudoFetched' is assigned a value but never used.","'AddIcon' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"100","fix":"101"},{"desc":"102","fix":"103"},"Update the dependencies array to be: [props.roomName, props.userId]",{"range":"104","text":"105"},"Update the dependencies array to be: [props.userId]",{"range":"106","text":"107"},[1472,1488],"[props.roomName, props.userId]",[3178,3180],"[props.userId]"]