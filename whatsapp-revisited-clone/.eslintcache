[{"C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\index.js":"1","C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\App.js":"2","C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\reportWebVitals.js":"3","C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\containers\\Auth\\Auth.js":"4","C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\containers\\Chat\\Chat.js":"5","C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\containers\\Conversations\\Conversations.js":"6","C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\components\\Conversation\\Conversation.js":"7","C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\components\\Message\\Message.js":"8","C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\store\\reducer\\auth.js":"9","C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\store\\action\\index.js":"10","C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\store\\action\\auth.js":"11","C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\firebase.js":"12","C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\components\\UI\\Spinner\\Spinner.js":"13","C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\components\\UI\\Modal\\Modal.js":"14","C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\components\\UI\\Backdrop\\Backdrop.js":"15","C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\containers\\FeatureMenu\\FeatureMenu.js":"16","C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\components\\UI\\ImageModal\\ImageModal.js":"17","C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\components\\UI\\MenuContact\\MenuContact.js":"18"},{"size":984,"mtime":1607904285347,"results":"19","hashOfConfig":"20"},{"size":700,"mtime":1609628325978,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"20"},{"size":4953,"mtime":1610581326007,"results":"23","hashOfConfig":"20"},{"size":10846,"mtime":1610640961278,"results":"24","hashOfConfig":"20"},{"size":6921,"mtime":1610675645376,"results":"25","hashOfConfig":"20"},{"size":1828,"mtime":1608391192812,"results":"26","hashOfConfig":"20"},{"size":407,"mtime":1610455379103,"results":"27","hashOfConfig":"20"},{"size":3878,"mtime":1610675513983,"results":"28","hashOfConfig":"20"},{"size":225,"mtime":1610675320976,"results":"29","hashOfConfig":"20"},{"size":4468,"mtime":1610675313974,"results":"30","hashOfConfig":"20"},{"size":834,"mtime":1610673530971,"results":"31","hashOfConfig":"20"},{"size":219,"mtime":1608030482749,"results":"32","hashOfConfig":"20"},{"size":2007,"mtime":1610640796935,"results":"33","hashOfConfig":"20"},{"size":288,"mtime":1608256393575,"results":"34","hashOfConfig":"20"},{"size":2308,"mtime":1610574948343,"results":"35","hashOfConfig":"20"},{"size":1068,"mtime":1610674242619,"results":"36","hashOfConfig":"20"},{"size":678,"mtime":1610484092810,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"cln990",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\index.js",[],["80","81"],"C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\App.js",[],"C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\reportWebVitals.js",[],"C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\containers\\Auth\\Auth.js",[],"C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\containers\\Chat\\Chat.js",["82","83","84"],"import React, { useEffect, useState } from 'react';\r\nimport \"./Chat.scss\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport { Avatar } from '@material-ui/core';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport Message from \"../../components/Message/Message\";\r\nimport db, {storage} from \"../../firebase\";\r\nimport firebase from \"firebase\"\r\nimport {connect} from \"react-redux\";\r\nimport ImageModal from \"../../components/UI/ImageModal/ImageModal\";\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Picker from 'emoji-picker-react';\r\nimport * as actions from \"../../store/action/index\";\r\nimport {Redirect, withRouter } from \"react-router-dom\";\r\nimport MenuContact from \"../../components/UI/MenuContact/MenuContact\";\r\nconst Chat = (props) => {\r\n    const [mess, setMessage] = useState(\"\");\r\n    const [messageCanal, setMessageCanal] = useState([])\r\n    const [showEmoji, setShowEmoji] = useState(false);\r\n    const [showAddFile, setShowAddFile] = useState(false);\r\n    const [fileSend, setFileSend] = useState(null);\r\n    const [fileError, setFileError] = useState(false);\r\n    const [imageToShow, setImageToShow] = useState(\"\");\r\n    const [searchBar, setSearchBar] = useState(\"\");\r\n    const [showSearchBar, setShowSearchBar] = useState(false);\r\n    const [showContactMenu, setShowContactMenu] = useState(false)\r\n\r\n    let iconSend = mess.length < 1 ? <Tooltip title=\"Record a voice message\" arrow><MicIcon className=\"chat__sendMessageMic\"/></Tooltip> : <Tooltip title=\"Send the message\" arrow><SendIcon onClick={(e) => sendMessage(e, mess)} className=\"chat__sendMessageMic\"/></Tooltip>\r\n\r\n    useEffect(() => {\r\n        let unsubcribe = () => {\r\n\r\n        };\r\n        if(props.userId && props.roomName) {\r\n            unsubcribe = db\r\n            .collection(\"Users\")\r\n            .doc(props.userId)\r\n            .collection(\"conversations\")\r\n            .doc(props.roomName)\r\n            .collection(\"messages\")\r\n            .orderBy(\"timestamp\", \"asc\")\r\n            .onSnapshot(snapshot => (\r\n                setMessageCanal(snapshot.docs.map(doc => (\r\n                    {\r\n                        data: doc.data()\r\n                    }\r\n                )))\r\n            ))\r\n        }\r\n\r\n        return () => {\r\n            unsubcribe()\r\n        }\r\n    }, [props.roomName, props.userId]);\r\n\r\n    const sendMessage = (event) => {\r\n        if(event) {\r\n            event.preventDefault()\r\n        }\r\n        //Query for the current user\r\n        db\r\n            .collection(\"Users\")\r\n            .doc(props.userId)\r\n            .collection(\"conversations\")\r\n            .doc(props.roomName)\r\n            .collection(\"messages\")\r\n            .add({\r\n                message: mess,\r\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                sender: props.pseudo.pseudo\r\n            })\r\n        //Query for the contact     \r\n        db\r\n        .collection(\"Users\")\r\n        .doc(props.contactData.userId)\r\n        .collection(\"conversations\")\r\n        .doc(props.roomName)\r\n        .collection(\"messages\")\r\n        .add({\r\n            message: mess,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            sender: props.pseudo.pseudo\r\n        })\r\n\r\n            setMessage(\"\");\r\n    }\r\n\r\n    const fileHandler = (event) => {\r\n        if(event.target.files[0]) {\r\n            if(event.target.files[0].type === \"image/jpeg\" || event.target.files[0].type === \"image/png\") {\r\n\r\n            } else {\r\n                setFileError(true) \r\n                console.log(\"jjj\")\r\n                setTimeout(() => {\r\n                    setFileError(false) \r\n                }, 5000)\r\n                event.target.value = null\r\n                \r\n            }\r\n            setFileSend(event.target.files[0])\r\n        }\r\n    }\r\n    \r\n\r\n    const fileUploadHandler = (event) => {\r\n        event.preventDefault()\r\n        storage.ref(`images/${fileSend.name}`).put(fileSend)\r\n        setTimeout(() => {\r\n            storage\r\n            .ref(\"images\")\r\n            .child(fileSend.name)\r\n            .getDownloadURL()\r\n            .then(url => {\r\n                        //Query for the current user\r\n                db\r\n                .collection(\"Users\")\r\n                .doc(props.userId)\r\n                .collection(\"conversations\")\r\n                .doc(props.roomName)\r\n                .collection(\"messages\")\r\n                .add({\r\n                    message: \"img\",\r\n                    imgUrl: url,\r\n                    timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                    sender: props.pseudo.pseudo\r\n                })\r\n\r\n                        //Query for the contact     \r\n                db\r\n                .collection(\"Users\")\r\n                .doc(props.contactData.userId)\r\n                .collection(\"conversations\")\r\n                .doc(props.roomName)\r\n                .collection(\"messages\")\r\n                .add({\r\n                    message: \"img\",\r\n                    imgUrl: url,\r\n                    timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                    sender: props.pseudo.pseudo\r\n                })\r\n\r\n\r\n            })\r\n        }, 1500);\r\n\r\n            setShowAddFile(false)\r\n    }\r\n\r\n\r\n    const onEmojiClick = (event, emojiObject) => {\r\n        setShowEmoji(false)\r\n        setMessage(mess + emojiObject.emoji)\r\n    };\r\n\r\n    const displayEmojiHandler = () => {\r\n        setShowEmoji(!showEmoji);\r\n        setShowAddFile(false);\r\n    }\r\n\r\n    const displayFileHandler = () => {\r\n        setShowAddFile(!showAddFile)\r\n        setShowEmoji(false)\r\n    }\r\n\r\n    //select an url for the image modal\r\n    const clickedHandler = (imgUrl) => {\r\n        setImageToShow(imgUrl)\r\n    }\r\n\r\n    const closeImageModal = () => {\r\n        setImageToShow(\"\")\r\n    }\r\n    \r\n    const searchBarHandler = () => {\r\n        setShowSearchBar(!showSearchBar)\r\n    }\r\n\r\n    const contactMenuHandler = () => {\r\n        setShowContactMenu(!showContactMenu)\r\n    }\r\n\r\n    const deleteConversation = () => {\r\n        setShowContactMenu(false)\r\n        props.roomDeleteHandler()\r\n        db\r\n        .collection(\"Users\")\r\n        .doc(props.userId)\r\n        .collection(\"conversations\")\r\n        .doc(props.roomName)\r\n        .delete()\r\n        setMessageCanal([])\r\n    }\r\n    let messageBody = document.querySelector('.chat__content');\r\n    if(messageBody) {\r\n        messageBody.scrollTop = messageBody.scrollHeight - messageBody.clientHeight;\r\n    }\r\n    return (\r\n        <div className=\"chat__container\">\r\n            <ImageModal \r\n                show={imageToShow} \r\n                imgUrl={imageToShow}\r\n                close={closeImageModal}\r\n                image={true}/>\r\n            <div className=\"chat__banner\">\r\n                <div className=\"chat__bannerInfo\">\r\n                    <Avatar className=\"chat__bannerAvatar\">{props.contact ? props.contact[0] : null}</Avatar>\r\n                    <div className=\"chat__info\">\r\n                        <p>{props.contact}</p>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"chat__bannerIcon\">\r\n                    <Tooltip title=\"Search a message\" arrow>\r\n                        <SearchIcon onClick={searchBarHandler}/>\r\n                    </Tooltip>\r\n                    <Tooltip title=\"You can write 'img' or a letter\" arrow>\r\n                    <input type=\"text\" value={searchBar} disabled={props.roomName===null} className={!showSearchBar ? \"chat__bannerSearch\" : \"chat__bannerSearch show\"} onChange={e => setSearchBar(e.target.value)}/>\r\n                    </Tooltip>\r\n                    <MoreHorizIcon onClick={contactMenuHandler}/>\r\n                    <Tooltip title=\"options\" arrow >\r\n                        <MenuContact show={showContactMenu && props.roomName!==null} delete={deleteConversation}/>\r\n                    </Tooltip>\r\n                </div>\r\n            </div>\r\n            <div className=\"chat__content\">\r\n                <div className={showAddFile ? \"chat__addFileModal\" : \"notShow\"}>\r\n                    <form style={{border: fileError ? \"1px solid red\" : null}}>\r\n                        <p style={{display: fileError ? \"block\": \"none\"}}>This not a valid file type</p>\r\n                        <input type=\"file\" onChange={fileHandler}/>\r\n                        <input type=\"submit\" disabled={fileError || fileSend === null ? true : false} onClick={fileUploadHandler}/>\r\n                    </form>\r\n                </div>\r\n                {showEmoji && props.roomName ? <Picker onEmojiClick={onEmojiClick} disableSearchBar={true} /> : null}\r\n                {messageCanal.filter(msg => msg.data.message.includes(searchBar)).map((room, index) => (\r\n                    <Message key={index} \r\n                             message={room.data.imgUrl ? null : room.data.message} \r\n                             img={room.data.imgUrl}\r\n                             clicked={() => clickedHandler(room.data.imgUrl)}\r\n                             reciever={room.data.sender == props.pseudo.pseudo ? false : true}\r\n                             timestamp={room.data.timestamp ? (new Date(room.data.timestamp.seconds * 1000)).toLocaleDateString('en-UK') : null} />\r\n                ))}\r\n            </div>\r\n            <div className=\"chat__sendMessage\">\r\n                <div className=\"chat__sendMessageEmoji\">\r\n                    <Tooltip title=\"Send an emoji\" arrow>\r\n                        <InsertEmoticonIcon onClick={displayEmojiHandler}/>\r\n                    </Tooltip>\r\n                    <Tooltip title=\"Send a picture\" arrow>\r\n                        <AttachFileIcon onClick={displayFileHandler}/>\r\n                    </Tooltip>\r\n                </div>\r\n                <form className=\"chat__sendMessageContent\">\r\n                    <input disabled={props.roomName===null} type=\"text\" onChange={(e) => setMessage(e.target.value)} value={mess}/>\r\n                    <button type=\"submit\" onClick={(event) => sendMessage(event, mess)}></button>\r\n                </form>\r\n                {iconSend}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userId: state.userId,\r\n        roomName: state.roomName,\r\n        email: state.email,\r\n        pseudo: state.pseudo,\r\n        contact: state.contact,\r\n        contactData: state.contactDetails\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        roomDeleteHandler: () => dispatch(actions.roomDeleteHandler())\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat);","C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\containers\\Conversations\\Conversations.js",[],"C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\components\\Conversation\\Conversation.js",[],"C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\components\\Message\\Message.js",["85"],"import React from 'react';\r\nimport \"./Message.scss\";\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={props.reciever ? \"message__container\" : \"message__container sender\"}>\r\n            <p>{props.message}</p>\r\n            {props.img ? <img src={props.img} onClick={props.clicked}/> : null}\r\n            <span>{props.timestamp}</span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Message;","C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\store\\reducer\\auth.js",[],"C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\store\\action\\index.js",[],"C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\store\\action\\auth.js",[],"C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\firebase.js",[],"C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\components\\UI\\Spinner\\Spinner.js",[],["86","87"],"C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\components\\UI\\Modal\\Modal.js",["88"],"import React from 'react';\r\nimport \"./Modal.scss\";\r\nimport Backdrop from \"../Backdrop/Backdrop\";\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nconst Modal = (props) => {\r\n    return (\r\n        <React.Fragment>\r\n            {props.children ? <React.Fragment>\r\n                <div  className={props.openModal ? \"modal__container account\" : \"modal__container close\"}>\r\n                <form>\r\n                    <h4 className=\"modular__modalTitle\">{props.title}</h4>\r\n                    <p>{props.info1} : {props.data1}</p>\r\n                    <p>{props.info2} : {props.data2}</p>\r\n                    <p>{props.info3} : {props.data3}</p>\r\n                </form>\r\n            </div>\r\n            </React.Fragment>\r\n            : \r\n            <React.Fragment><Backdrop show={props.show} click={props.click}/>\r\n            <CSSTransition in={props.show} timeout={300} classNames={\"modal-transition\"} unmountOnExit >\r\n            <div className=\"modal__container\" >\r\n                <form>\r\n                    <h4>{props.errorMessage}</h4>\r\n                    <label>Choose a new conversation name</label>\r\n                    <input className={props.errorMessage ? \"errorInput\" : null} placeholder=\"Name\" onChange={(e) => props.change(e)}/>\r\n                    <label>Add the pseudo of your the receiver:</label>\r\n                    <div className=\"modal__addPerson\">\r\n                        <input className={props.errorMessage ? \"errorInput\" : null} type=\"text\" placeholder=\"Pseudo\" onChange={(e) => props.changeContact(e)}/>\r\n                    </div>\r\n                    <div className=\"modal__button\">\r\n                        <button onClick={props.ok}>OK</button>\r\n                        <button onClick={props.click}>Cancel</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            </CSSTransition></React.Fragment>\r\n            }\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Modal;","C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\components\\UI\\Backdrop\\Backdrop.js",[],"C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\containers\\FeatureMenu\\FeatureMenu.js",["89"],"import React, { useState } from 'react';\r\nimport \"./FeatureMenu.scss\";\r\nimport Modal from \"../../components/UI/Modal/Modal\";\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport * as actions from \"../../store/action/index\";\r\nimport axios from \"axios\";\r\nconst FeatureMenu = (props) => {\r\n    const [openModal, setOpenModal] = useState(false);\r\n    const modalOpenHandler = () => {\r\n        setOpenModal(true)\r\n    }\r\n    const modalCloseHandler = () => {\r\n        setOpenModal(false)\r\n    }\r\n\r\n    return (\r\n\r\n        <div className={props.open ? \"featureMenu__container toggleMenu\" : \"featureMenu__container\"}>\r\n            {props.isAuth ? <Redirect to=\"/\"/> : null}\r\n            <div className=\"featureMenu__container2\">\r\n                <img src=\"https://upload.wikimedia.org/wikipedia/commons/c/cb/Whatsapp_logo.svg\" alt=\"whatsapp logo\" className=\"featureMenu__WLogo\"/>\r\n                <ClearIcon className=\"feateMenu__clearIcon\" onClick={props.toggle}/>\r\n                <ul className=\"featureMenu__text\">\r\n                    <li onMouseOver={() => modalOpenHandler()} onMouseLeave={() => modalCloseHandler()}>Account</li>\r\n                    <div className=\"featureMenu__accountModal\">\r\n                        <Modal \r\n                            openModal={openModal} \r\n                            title={\"Account information\"}\r\n                            info1={\"email\"} data1={props.pseudo.email !== null ? props.pseudo.email : \" \"}\r\n                            info2={\"pseudo\"} data2={props.pseudo.pseudo !== null ? props.pseudo.pseudo : \" \"}\r\n                            info3={\"password\"} data3={props.pseudo.password !== null ? props.pseudo.password : \" \"}> </Modal>\r\n                    </div>\r\n                    <button onClick={props.logoutHandler}>LOGOUT</button>\r\n                </ul>\r\n                \r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        pseudo: state.pseudo,\r\n        isAuth: state.userId === null\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        logoutHandler: () => dispatch(actions.logoutHandler())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FeatureMenu);","C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\components\\UI\\ImageModal\\ImageModal.js",[],"C:\\Users\\Jean\\Web-training-projects\\whatsapp-revisited-clone\\src\\components\\UI\\MenuContact\\MenuContact.js",[],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":18,"column":9,"nodeType":"96","messageId":"97","endLine":18,"endColumn":17},{"ruleId":"94","severity":1,"message":"98","line":18,"column":19,"nodeType":"96","messageId":"97","endLine":18,"endColumn":29},{"ruleId":"99","severity":1,"message":"100","line":244,"column":57,"nodeType":"101","messageId":"102","endLine":244,"endColumn":59},{"ruleId":"103","severity":1,"message":"104","line":7,"column":26,"nodeType":"105","endLine":7,"endColumn":72},{"ruleId":"90","replacedBy":"106"},{"ruleId":"92","replacedBy":"107"},{"ruleId":"94","severity":1,"message":"108","line":5,"column":8,"nodeType":"96","messageId":"97","endLine":5,"endColumn":15},{"ruleId":"94","severity":1,"message":"109","line":8,"column":8,"nodeType":"96","messageId":"97","endLine":8,"endColumn":13},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'withRouter' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["110"],["111"],"'AddIcon' is defined but never used.","'axios' is defined but never used.","no-global-assign","no-unsafe-negation"]